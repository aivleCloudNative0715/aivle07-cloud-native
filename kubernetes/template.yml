apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        'sidecar.istio.io/inject': "true"
    spec:
      containers:
      - name: redis
        image: redis:6.2-alpine # 가벼운 Redis 이미지
        imagePullPolicy: Always
        ports:
          - containerPort: 6379
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 15
          periodSeconds: 20

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user
  labels:
    app: user
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user
  template:
    metadata:
      labels:
        app: user
        'sidecar.istio.io/inject': "true"
    spec:
      containers:
        - name: user
          image: project15acr.azurecr.io/user:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8082
          env:
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: jwt_secret
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8082
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8082
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: author
  labels:
    app: author
spec:
  replicas: 1
  selector:
    matchLabels:
      app: author
  template:
    metadata:
      labels:
        app: author
        'sidecar.istio.io/inject': "true"
    spec:
      containers:
        - name: author
          image: project15acr.azurecr.io/author:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8083
          env:
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: jwt_secret
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8083
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8083
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: aiservice
  labels:
    app: aiservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aiservice
  template:
    metadata:
      labels:
        app: aiservice
        'sidecar.istio.io/inject': "true"
    spec:
      containers:
        - name: aiservice
          image: project15acr.azurecr.io/aiservice:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8084
          env:
            - name: SPRING_PROFILES_ACTIVE  
              value: "docker"
            - name: SPRING_GPT_BASE_URL
              value: https://api.openai.com/v1
            - name: SPRING_GPT_IMAGE_URL
              value: https://api.openai.com/v1
            - name: SPRING_GPT_MODEL
              value: gpt-4o-mini
            - name: SPRING_GPT_IMAGE_MODEL
              value: dall-e-3
            - name: SPRING_GPT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: openai-api-key-secret
                  key: api_key
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8084
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8084
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform
  labels:
    app: platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: platform
  template:
    metadata:
      labels:
        app: platform
        'sidecar.istio.io/inject': "true"
    spec:
      containers:
        - name: platform
          image: project15acr.azurecr.io/platform:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8085
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8085
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8085
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: writing
  labels:
    app: writing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: writing
  template:
    metadata:
      labels:
        app: writing
        'sidecar.istio.io/inject': "true"
    spec:
      containers:
        - name: writing
          image: project15acr.azurecr.io/writing:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8086
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8086
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8086
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: point
  labels:
    app: point
spec:
  replicas: 1
  selector:
    matchLabels:
      app: point
  template:
    metadata:
      labels:
        app: point
        'sidecar.istio.io/inject': "true"
    spec:
      containers:
        - name: point
          image: project15acr.azurecr.io/point:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8087
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8087
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8087
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
        'sidecar.istio.io/inject': "true"
    spec:
      containers:
        - name: gateway
          image: project15acr.azurecr.io/gateway:latest
          ports:
            - containerPort: 8088


---

apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
  type: ClusterIP # 클러스터 내부에서만 접근

---

apiVersion: v1
kind: Service
metadata:
  name: user
  labels:
    app: user
spec:
  ports:
    - port: 8082
      targetPort: 8082
  selector:
    app: user


---


apiVersion: v1
kind: Service
metadata:
  name: author
  labels:
    app: author
spec:
  ports:
    - port: 8083
      targetPort: 8083
  selector:
    app: author


---


apiVersion: v1
kind: Service
metadata:
  name: aiservice
  labels:
    app: aiservice
spec:
  ports:
    - port: 8084
      targetPort: 8084
  selector:
    app: aiservice


---


apiVersion: v1
kind: Service
metadata:
  name: platform
  labels:
    app: platform
spec:
  ports:
    - port: 8085
      targetPort: 8085
  selector:
    app: platform


---


apiVersion: v1
kind: Service
metadata:
  name: writing
  labels:
    app: writing
spec:
  ports:
    - port: 8086
      targetPort: 8086
  selector:
    app: writing


---


apiVersion: v1
kind: Service
metadata:
  name: point
  labels:
    app: point
spec:
  ports:
    - port: 8087
      targetPort: 8087
  selector:
    app: point

---

apiVersion: v1
kind: Service
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  selector:
    app: gateway
  ports:
    - name: http
      port: 8088
      targetPort: 8088
  type: ClusterIP